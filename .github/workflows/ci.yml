name: CI

on:
  push:
    branches: [master, trunk]
  pull_request:

jobs:
  fmt:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
          toolchain: nightly
          components: rustfmt
          override: true
    - name: Check formatting
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: -- --check
  test:
    name: Check that examples build
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
          toolchain: stable
          override: true
    - uses: actions-rs/cargo@v1
      with:
        command: test
  build:
    name: Check that the code builds
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
          toolchain: stable
          override: true
    - uses: actions-rs/cargo@v1
      with:
        command: build
  examples:
    name: Check that examples build
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
          toolchain: stable
          override: true
    - uses: actions-rs/cargo@v1
      with:
        command: build
        args: --features webview --example webview_custom_protocol
    # The below should technically, maybe, probably use the iOS rust toolchain.
    # That said, since it's all Objective-C message passing under the hood, we're
    # really just looking for whether we've broken the iOS build. It is likely
    # that more robust tests/checking infrastructure should exist for this side
    # of things as the iOS portion gets iterated on.
    #
    # (e.g, this at the moment will not catch invalid selector calls, like if an appkit-specific
    # selector is used for something on iOS)
    - uses: actions-rs/cargo@v1
      with:
        command: build
        args: --example ios-beta --no-default-features --features uikit,autolayout
